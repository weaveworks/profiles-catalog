nameOverride: "crossplane"

replicas: 1

deploymentStrategy: RollingUpdate

image:
  repository: upbound/crossplane
  tag: %%CROSSPLANE_TAG%%
  pullPolicy: IfNotPresent

nodeSelector: {}
tolerations: {}
affinity: {}

# -- Custom labels to add into metadata
customLabels: {}

# -- Custom Annotations to add to crossplane serviceaccount
serviceAccount:
  customAnnotations: {}

leaderElection: true
args: {}

# How frequently Crossplane may reconcile its resources (seconds). Default: 10
maxReconcileRate: ""

provider:
  packages: []

configuration:
  packages: []

registryCaBundleConfig: {}

rbacManager:
  deploy: true
  skipAggregatedClusterRoles: true
  replicas: 1
  managementPolicy: Basic
  leaderElection: true
  args: {}
  nodeSelector: {}
  tolerations: {}
  affinity: {}

priorityClassName: ""

resourcesCrossplane:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 768Mi

securityContextCrossplane:
  runAsUser: 65532
  runAsGroup: 65532
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true

packageCache:
  medium: ""
  sizeLimit: 5Mi
  pvc: ""

webhooks:
  enabled: false

resourcesRBACManager:
  limits:
    cpu: 100m
    memory: 768Mi
  requests:
    cpu: 100m
    memory: 512Mi

securityContextRBACManager:
  runAsUser: 65532
  runAsGroup: 65532
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true

metrics:
  enabled: false

# List of extra environment variables to set in the crossplane deployment.
# EXAMPLE
# extraEnvironmentVars:
#   sample.key: value1
#   ANOTHER.KEY: value2
# RESULT
#   - name: sample_key
#     value: "value1"
#   - name: ANOTHER_KEY
#     value: "value2"
extraEnvVarsCrossplane: {}

# List of extra environment variables to set in the crossplane rbac manager deployment.
# EXAMPLE
# extraEnvironmentVars:
#   sample.key: value1
#   ANOTHER.KEY: value2
# RESULT
#   - name: sample_key
#     value: "value1"
#   - name: ANOTHER_KEY
#     value: "value2"
extraEnvVarsRBACManager: {}

podSecurityContextCrossplane: {}

podSecurityContextRBACManager: {}

upbound:
  controlPlane:
    permission: edit

xgql:
  image:
    repository: upbound/xgql
    tag: %%XGQL_TAG%%
    pullPolicy: IfNotPresent
  resources: {}
  metrics:
    enabled: false
  config:
    debugMode: false
    args: []
    envVars: {}
    # List of extra environment variables to set in the xgql deployment.
    # EXAMPLE
    # envVars:
    #   sample.key: value1
    #   ANOTHER.KEY: value2
    # RESULT
    #   - name: sample_key
    #     value: "value1"
    #   - name: ANOTHER_KEY
    #     value: "value2"

### Bootstrapper Values

bootstrapper:
  image:
    repository: upbound/uxp-bootstrapper
    tag: %%BOOTSTRAPPER_TAG%%
    pullPolicy: IfNotPresent
  resources: {}
  config:
    debugMode: false
    args: []
    envVars: {}
    # List of extra environment variables to set in the bootstrapper deployment.
    # EXAMPLE
    # envVars:
    #   sample.key: value1
    #   ANOTHER.KEY: value2
    # RESULT
    #   - name: sample_key
    #     value: "value1"
    #   - name: ANOTHER_KEY
    #     value: "value2"

billing:
  awsMarketplace:
    enabled: false
    iamRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
